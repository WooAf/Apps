#!/bin/bash

#### Admin Token
admin_token() {
    clear

    # Source the config file to get the current admin token
    config_path="/pg/config/${app_name}.cfg"
    if [[ -f "$config_path" ]]; then
        source "$config_path"
    else
        echo "Error: Configuration file not found at $config_path."
        return
    fi

    # Display current token, handle if it's null
    if [[ "$admin_token" == "null" || -z "$admin_token" ]]; then
        echo "Current Admin Token: Not set"
    else
        echo "Current Admin Token: $admin_token"
    fi

    # Note about changing the token
    echo -e "Note: Changing the admin token will stop the Docker container and require manual\nredeployment."
    echo -e "\nPlease enter your new Vaultwarden Admin Token"
    echo -e "Type [${GREEN}Z${NC}] to exit.\n"

    while true; do
        read -p "Admin Token (minimum 12 characters): " new_token

        # Convert to lowercase for comparison
        local lowercase_token="${new_token,,}"

        # Check if the user wants to exit
        if [[ "$lowercase_token" == "z" ]]; then
            echo "Operation cancelled."
            return 0  # Exit the function
        elif [[ ${#new_token} -ge 12 ]]; then
            admin_token="$new_token"
            # Update the config file with the new token
            sed -i "s|^admin_token=.*|admin_token=$admin_token|" "$config_path"
            echo "Admin token updated successfully."

            # Stop and remove the Docker container
            docker stop "$app_name"
            docker rm "$app_name"
            echo "Docker container killed. You will need to redeploy manually."
            break
        else
            clear
            echo -e "${RED}Invalid input.${NC} The token must be at least 12 characters long."
        fi
    done
}
